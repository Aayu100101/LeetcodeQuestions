Apprach 3 - Better space complexity and no conflict of negative numbers.

Explanation - If we already know the rows and columns that we need to set it to 0, our tasks are half done.
              So, For this. We will take two arrays, one of size row and another of size of column(say row & col).
              Initialize the two dummy arrays with -1.
              Traverse the matrix and whenever we find a 0, that means the entire row & column is to be set as 0. 
              So, we will make this index in our row & col 0 to indicate that this row & col is to be set as 0.

Result - Time - 97.89% better than C++ submissions
         Space - better than 81.26% C++ submissions.

Code - 

class Solution {
public:
  
    void setZeroes(vector<vector<int>>& matrix) {
        int r = matrix.size();
        int c = matrix[0].size();
        
        int row[r], col[c];
        memset(row, -1, sizeof(row));
        memset(col, -1, sizeof(col));
        
        for(int i=0;i<r;++i){
            for(int j=0;j<c;++j){
                if(matrix[i][j] == 0){
                    row[i] = 0;
                    col[j] = 0;
                }
            }
        }
        
        for(int i=0;i<r;++i){
            for(int j=0;j<c;++j){
                if(row[i] == 0 || col[j] == 0){
                    matrix[i][j] = 0;
                }
            }
        }
        
    }
};
